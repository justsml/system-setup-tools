[core]
  autocrlf = false
  fileMode = false
[init]
	defaultBranch = main
[push]
  default = upstream
[i18n]
  filesEncoding = utf-8
[color]
  branch = auto
  diff = auto
  status = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[alias]
  merge = fetch --no-ff
  mreview = fetch --no-ff --no-commit # preview merge without actually commiting any file cahnges
  st = status
  diff = diff -b
  c  = commit -m # Append comment, e.g: git cm "New code"
  cm = commit -m
  br = branch -v # List branches
  remotes = remote -v # List remotes
  co = checkout
  b = create-branch
  nb = checkout -b # Make a new branch - must supply new name
  bla = branch --list -a
  df = diff
  lg = log -p
  who = shortlog -s --
  lc = log ORIG_HEAD.. --stat --no-merges
  llog = log --date=local
  recent = diff HEAD..HEAD^ --name-status
  konflict = !gitk --left-right HEAD...MERGE_HEAD
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
  k = !gitk
  cleanse = clean -d -f
  pa = add -p    # Interactivly Add Files Selectively
  join = merge --no-ff
  up = !sh -c 'git pull --rebase --prune && git log --pretty=format:\"%Cred%ae %Creset- %C(yellow)%s %Creset(%ar)\" HEAD@{1}..'
  removed = !sh -c 'git log -1 -p | grep "^- " | wc -l'
  added = !sh -c 'git log -1 -p | grep "^+ " | wc -l'
  recommit = commit --amend     # Amend prev commit with latest changes
  undo = reset --soft HEAD~1 
  ribbon = tag --force _ribbon origin/master
  catchup = log --patch --reverse --topo-order _ribbon..origin/master

  graph-tiny = log --graph -14 --branches --remotes --tags  --format=format:'%Cgreen%h %Creset• %<(75,trunc)%s (%cN, %cr) %Cred%d' --date-order
  graph-long = log --graph -60 --branches --remotes --tags  --format=format:'%Cgreen%h %Creset• %<(75,trunc)%s (%cN, %cr) %Cred%d' --date-order
  graph      = log --graph -30 --branches --remotes --tags  --format=format:'%Cgreen%h %Creset• %<(75,trunc)%s (%cN, %cr) %Cred%d' --date-order

  unstage = reset -q HEAD --
  discard = checkout --
  uncommit = reset --mixed HEAD~
  amend = commit --amend
  nevermind = !git reset --hard HEAD && git clean -d -f
  precommit = diff --cached --diff-algorithm=minimal -w

[transfer]
# fsckobjects = true # recommended

[receive]
# fsckObjects = true # recommended




